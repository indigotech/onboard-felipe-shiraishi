{"version":3,"sources":["Card.tsx"],"names":["GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","Card","isClosing","Animated","Value","inverted","props","gestureDirection","layout","width","height","isSwiping","animate","closing","velocity","gesture","transitionSpec","onOpen","onClose","onTransitionStart","toValue","getAnimateToValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","Boolean","config","useNativeDriver","isInteraction","start","finished","handleEndInteraction","enabled","pointerEvents","content","current","setNativeProps","React","createRef","interactionHandle","undefined","InteractionManager","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","GestureState","BEGAN","setValue","CANCELLED","END","distance","translation","translationY","velocityY","translationX","velocityX","Math","abs","getInterpolatedStyle","styleInterpolator","index","next","insetTop","insetRight","insetBottom","insetLeft","progress","swiping","layouts","screen","insets","top","right","bottom","left","getCardAnimationContext","gestureRef","prevProps","gestureResponseDistance","vertical","horizontal","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","overlayEnabled","shadowEnabled","gestureEnabled","children","customContainerStyle","containerStyle","contentStyle","rest","interpolatedStyle","animationContext","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","StyleSheet","flatten","backgroundColor","isTransparent","alpha","styles","overlay","container","gestureActivationCriteria","shadow","shadowHorizontal","shadowVertical","Component","defaultProps","Platform","OS","create","flex","overflow","absoluteFillObject","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  Platform,\n  InteractionManager,\n} from 'react-native';\nimport {\n  PanGestureHandler,\n  State as GestureState,\n  PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport { EdgeInsets } from 'react-native-safe-area-context';\nimport Color from 'color';\nimport StackGestureRefContext from '../../utils/GestureHandlerRefContext';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  TransitionSpec,\n  StackCardStyleInterpolator,\n  GestureDirection,\n  Layout,\n} from '../../types';\n\ntype Props = ViewProps & {\n  index: number;\n  closing?: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransitionStart?: (props: { closing: boolean }) => void;\n  onGestureBegin?: () => void;\n  onGestureCanceled?: () => void;\n  onGestureEnd?: () => void;\n  children: React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    overlayEnabled: Platform.OS !== 'ios',\n    shadowEnabled: true,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    if (\n      this.getAnimateToValue(this.props) !== this.getAnimateToValue(prevProps)\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.handleEndInteraction();\n  }\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing?: boolean;\n    velocity?: number;\n  }) => {\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransitionStart,\n    } = this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    onTransitionStart?.({ closing: Boolean(closing) });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.content.current &&\n      this.content.current.setNativeProps({ pointerEvents });\n  };\n\n  private content = React.createRef<View>();\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.BEGAN:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED:\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n        onGestureCanceled?.();\n        break;\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          Math.abs(translation + velocity * gestureVelocityImpact) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : false;\n\n        this.animate({ closing, velocity });\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) =>\n      styleInterpolator({\n        index,\n        current: { progress: current },\n        next: next && { progress: next },\n        closing: this.isClosing,\n        swiping: this.isSwiping,\n        inverted: this.inverted,\n        layouts: {\n          screen: layout,\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft,\n        },\n      })\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimationContext = memoize(\n    (\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n\n    const distance =\n      gestureDirection === 'vertical' ||\n      gestureDirection === 'vertical-inverted'\n        ? gestureResponseDistance?.vertical !== undefined\n          ? gestureResponseDistance.vertical\n          : GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : gestureResponseDistance?.horizontal !== undefined\n        ? gestureResponseDistance.horizontal\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n        };\n      }\n    }\n  }\n\n  private gestureRef: React.Ref<PanGestureHandler> = React.createRef();\n\n  render() {\n    const {\n      styleInterpolator,\n      index,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const animationContext = this.getCardAnimationContext(\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle,\n    } = interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver: true }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent = backgroundColor\n      ? Color(backgroundColor).alpha() === 0\n      : false;\n\n    return (\n      <View pointerEvents=\"box-none\" {...rest}>\n        {overlayEnabled && overlayStyle ? (\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[styles.overlay, overlayStyle]}\n          />\n        ) : null}\n        <Animated.View\n          style={[styles.container, containerStyle, customContainerStyle]}\n          pointerEvents=\"box-none\"\n        >\n          <PanGestureHandler\n            ref={this.gestureRef}\n            enabled={layout.width !== 0 && gestureEnabled}\n            onGestureEvent={handleGestureEvent}\n            onHandlerStateChange={this.handleGestureStateChange}\n            {...this.gestureActivationCriteria()}\n          >\n            <Animated.View style={[styles.container, cardStyle]}>\n              {shadowEnabled && shadowStyle && !isTransparent ? (\n                <Animated.View\n                  style={[\n                    styles.shadow,\n                    gestureDirection === 'horizontal'\n                      ? styles.shadowHorizontal\n                      : styles.shadowVertical,\n                    shadowStyle,\n                  ]}\n                  pointerEvents=\"none\"\n                />\n              ) : null}\n              <View ref={this.content} style={[styles.content, contentStyle] as any}>\n                <StackGestureRefContext.Provider value={this.gestureRef}>\n                  <CardAnimationContext.Provider value={animationContext}>\n                    {children}\n                  </CardAnimationContext.Provider>\n                </StackGestureRefContext.Provider>\n              </View>\n            </Animated.View>\n          </PanGestureHandler>\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    backgroundColor: '#fff',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowVertical: {\n    top: 0,\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n});\n"]}
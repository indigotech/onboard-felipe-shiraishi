{"version":3,"sources":["CardStack.tsx"],"names":["React","Animated","View","StyleSheet","Dimensions","Platform","ScreenContainer","Screen","screensEnabled","getDefaultHeaderHeight","CardContainer","DefaultTransition","ModalTransition","forNoAnimation","forNoAnimationHeader","forNoAnimationCard","getDistanceForDirection","EPSILON","dimensions","get","layout","width","height","MaybeScreenContainer","enabled","rest","OS","MaybeScreen","active","FALLBACK_DESCRIPTOR","Object","freeze","options","getHeaderHeights","routes","insets","descriptors","previous","reduce","acc","curr","key","flatten","headerStyle","safeAreaInsets","headerStatusBarHeight","top","getDistanceFromOptions","mode","descriptor","gestureDirection","getProgressFromGesture","gesture","distance","interpolate","inputRange","outputRange","CardStack","state","scenes","gestures","props","headerHeights","handleLayout","e","nativeEvent","setState","handleHeaderLayout","route","previousHeight","closingRouteKeys","onOpenRoute","onCloseRoute","getPreviousRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","index","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerStyleInterpolator","right","bottom","left","styles","container","map","self","focused","scene","isScreenActive","length","progress","next","extrapolate","headerShown","headerTransparent","cardShadowEnabled","cardOverlayEnabled","cardStyle","animationEnabled","gestureResponseDistance","gestureVelocityImpact","transitionSpec","cardStyleInterpolator","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","absoluteFill","includes","onContentHeightChange","styleInterpolator","undefined","style","floating","Value","openingRouteKeys","previousRoute","nextRoute","oldScene","currentGesture","previousGesture","nextGesture","nextDescriptor","previousDescriptor","current","__memo","every","it","i","Component","create","flex","overflow","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n  ViewProps,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer, Screen, screensEnabled } from 'react-native-screens'; // Import with * as to prevent getters being called\nimport { NavigationState as StackNavigationState } from 'react-navigation';\n\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport {\n  Route,\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 1e-5;\n\nconst dimensions = Dimensions.get('window');\nconst layout = { width: dimensions.width, height: dimensions.height };\n\nconst MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && screensEnabled()) {\n    return <ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: number | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && screensEnabled()) {\n    // @ts-ignore\n    return <Screen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const { height = previous[curr.key] } = StyleSheet.flatten(\n      options.headerStyle || {}\n    );\n\n    const safeAreaInsets = {\n      ...insets,\n      ...options.safeAreaInsets,\n    };\n\n    const { headerStatusBarHeight = safeAreaInsets.top } = options;\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(mode, layout, descriptor);\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-ignore\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  state: State = {\n    routes: [],\n    scenes: [],\n    gestures: {},\n    layout,\n    descriptors: this.props.descriptors,\n    // Used when card's header is null and mode is float to make transition\n    // between screens with headers and those without headers smooth.\n    // This is not a great heuristic here. We don't know synchronously\n    // on mount what the header height is so we have just used the most\n    // common cases here.\n    headerHeights: {},\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          {}\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    return (\n      <React.Fragment>\n        <MaybeScreenContainer\n          enabled={mode !== 'modal'}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            // Display current screen and a screen beneath.\n            // On Android screen beneath is hidden on animation finished bs of RNS's issue.\n            const isScreenActive =\n              index === self.length - 1\n                ? 1\n                : Platform.OS === 'android'\n                ? scene.progress.next\n                  ? scene.progress.next.interpolate({\n                      inputRange: [0, 1 - EPSILON, 1],\n                      outputRange: [1, 1, 0],\n                      extrapolate: 'clamp',\n                    })\n                  : 1\n                : index === self.length - 2\n                ? 1\n                : 0;\n\n            const {\n              safeAreaInsets,\n              headerShown,\n              headerTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardStyle,\n              animationEnabled,\n              gestureResponseDistance,\n              gestureVelocityImpact,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = animationEnabled === false\n                ? forNoAnimationCard\n                : defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as StackNavigationOptions);\n\n            let transitionConfig = {\n              gestureDirection,\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  animationEnabled,\n                  gestureDirection = defaultTransitionPreset.gestureDirection,\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = animationEnabled === false\n                    ? forNoAnimationCard\n                    : defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as StackNavigationOptions);\n\n                transitionConfig = {\n                  gestureDirection,\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={mode !== 'modal'}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  previousScene={scenes[index - 1]}\n                  state={state}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  gestureResponseDistance={gestureResponseDistance}\n                  headerHeight={headerHeights[route.key]}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousRoute={getPreviousRoute}\n                  headerMode={headerMode}\n                  headerShown={headerShown}\n                  headerTransparent={headerTransparent}\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {headerMode === 'float'\n          ? renderHeader({\n              mode: 'float',\n              layout,\n              insets: { top, right, bottom, left },\n              scenes,\n              state,\n              getPreviousRoute,\n              onContentHeightChange: this.handleHeaderLayout,\n              styleInterpolator:\n                focusedOptions.headerStyleInterpolator !== undefined\n                  ? focusedOptions.headerStyleInterpolator\n                  : defaultTransitionPreset.headerStyleInterpolator,\n              style: styles.floating,\n            })\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}